const Product = require('../models/product');

exports.getAddProduct = (req, res, next) => {
    res.render('admin/addProduct', {
        pageTitle: 'Add Product',
        path: '/admin/addProduct',
    });
};

exports.postAddProduct = (req, res, next) => {
    const title = req.body.title;
    const imageURL = req.body.imageURL;
    const price = req.body.price;
    const description = req.body.description;
    const product = new Product(title, imageURL, description, price);
    product.save();
    res.redirect('/');
};

exports.getEditProduct = (req, res, next) => {
    const pId = req.params.productId;
    Product.findByID(pId, product => {
        if (!product) {
            return res.redirect('/');
        }
        res.render('admin/editProduct', {
            pageTitle: 'Edit Product',
            path: '/admin/editProduct',
            product: product
        });
    });
};

exports.postEditProduct = (req, res, next) => {
    const title = req.body.title;
    const imageURL = req.body.imageURL;
    const price = req.body.price;
    const description = req.body.description;
    const pid = req.body.productID;
    Product.updateProduct(pid, title, imageURL, description, price);
    res.redirect('/');
};

exports.postDeleteProduct = (req, res, next) => {
    const pid = req.body.productID;
    Product.deleteProduct(pid);
    res.redirect('/');
};

exports.getProducts = (req, res, next) => {
    const shopProducts = Product.fetshAll();
    res.render('admin/products', {
        pageTitle: 'Admin Products',
        path: '/admin/products',
        products: shopProducts
    });
}